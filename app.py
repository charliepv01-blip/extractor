import streamlit as st
import re

# Fun√ß√£o de Extra√ß√£o de Dados (mantida a sua l√≥gica original)
def extrair_dados(texto):
    """Extrai n√∫meros, emails e URLs de um bloco de texto."""
    # Usando st.cache_data para cachear resultados e otimizar o desempenho (opcional, mas recomendado)
    
    # \d+
    numeros = re.findall(r'\d+', texto)
    
    # Padr√£o para emails
    emails = re.findall(r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b', texto)
    
    # Padr√£o para URLs
    urls = re.findall(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', texto)
    
    return numeros, emails, urls

# Configura√ß√£o da Interface Streamlit
def main():
    st.set_page_config(page_title="An√°lise e Extra√ß√£o de Dados", layout="centered")
    st.title("üîé An√°lise e Extra√ß√£o de Dados")
    st.markdown("Insira o texto para extrair automaticamente n√∫meros, e-mails e URLs.")

    # Equivalente ao tk.Text
    texto_input = st.text_area("√Årea de Texto", height=200, 
                               placeholder="Cole seu texto aqui, ex: Meu email √© teste@exemplo.com e meu telefone √© 123456. Acesse o link https://www.google.com.")

    # Equivalente ao tk.Button
    if st.button("Extrair Dados", type="primary"):
        if texto_input:
            # Chama a fun√ß√£o de extra√ß√£o
            numeros, emails, urls = extrair_dados(texto_input)
            
            st.subheader("Resultados da Extra√ß√£o:")
            
            # Exibi√ß√£o dos resultados (Substituindo os tk.Label)
            
            # Resultados de N√∫meros
            st.markdown("#### üî¢ N√∫meros Encontrados:")
            if numeros:
                st.success(', '.join(numeros))
            else:
                st.info("Nenhum n√∫mero encontrado.")

            # Resultados de Emails
            st.markdown("#### üìß E-mails Encontrados:")
            if emails:
                # Usamos um conjunto (set) para remover duplicatas e depois voltamos para lista
                st.success(', '.join(sorted(list(set(emails)))))
            else:
                st.info("Nenhum e-mail encontrado.")
            
            # Resultados de URLs
            st.markdown("#### üîó URLs Encontradas:")
            if urls:
                # Usamos um conjunto (set) para remover duplicatas e depois voltamos para lista
                st.success('\n\n'.join(sorted(list(set(urls)))))
            else:
                st.info("Nenhuma URL encontrada.")
        else:
            st.warning("Por favor, insira algum texto para extrair os dados.")

if __name__ == "__main__":
    main()
